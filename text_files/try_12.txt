Results are available in output/base2new/train_base/Ucmerced/shots_16/MaPLe/vit_b16_c2_ep5_batch4_2ctx/seed45. Resuming...
Setting fixed seed: 45
***************
** Arguments **
***************
backbone: 
config_file: configs/trainers/MaPLe/vit_b16_c2_ep5_batch4_2ctx.yaml
dataset_config_file: configs/datasets/Ucmerced.yaml
eval_only: False
head: 
load_epoch: None
model_dir: 
no_train: False
opts: ['DATASET.NUM_SHOTS', '16', 'DATASET.SUBSAMPLE_CLASSES', 'base']
output_dir: output/base2new/train_base/Ucmerced/shots_16/MaPLe/vit_b16_c2_ep5_batch4_2ctx/seed45
resume: 
root: /raid/biplab/taha
seed: 45
source_domains: None
target_domains: None
trainer: MaPLe
transforms: None
************
** Config **
************
DATALOADER:
  K_TRANSFORMS: 1
  NUM_WORKERS: 8
  RETURN_IMG0: False
  TEST:
    BATCH_SIZE: 100
    SAMPLER: SequentialSampler
  TRAIN_U:
    BATCH_SIZE: 32
    N_DOMAIN: 0
    N_INS: 16
    SAME_AS_X: True
    SAMPLER: RandomSampler
  TRAIN_X:
    BATCH_SIZE: 4
    N_DOMAIN: 0
    N_INS: 16
    SAMPLER: RandomSampler
DATASET:
  ALL_AS_UNLABELED: False
  CIFAR_C_LEVEL: 1
  CIFAR_C_TYPE: 
  NAME: Ucmerced
  NUM_LABELED: -1
  NUM_SHOTS: 16
  ROOT: /raid/biplab/taha
  SOURCE_DOMAINS: ()
  STL10_FOLD: -1
  SUBSAMPLE_CLASSES: base
  TARGET_DOMAINS: ()
  VAL_PERCENT: 0.1
INPUT:
  COLORJITTER_B: 0.4
  COLORJITTER_C: 0.4
  COLORJITTER_H: 0.1
  COLORJITTER_S: 0.4
  CROP_PADDING: 4
  CUTOUT_LEN: 16
  CUTOUT_N: 1
  GB_K: 21
  GB_P: 0.5
  GN_MEAN: 0.0
  GN_STD: 0.15
  INTERPOLATION: bicubic
  NO_TRANSFORM: False
  PIXEL_MEAN: [0.48145466, 0.4578275, 0.40821073]
  PIXEL_STD: [0.26862954, 0.26130258, 0.27577711]
  RANDAUGMENT_M: 10
  RANDAUGMENT_N: 2
  RGS_P: 0.2
  RRCROP_SCALE: (0.08, 1.0)
  SIZE: (224, 224)
  TRANSFORMS: ('random_resized_crop', 'random_flip', 'normalize')
MODEL:
  BACKBONE:
    NAME: ViT-B/16
    PRETRAINED: True
  HEAD:
    ACTIVATION: relu
    BN: True
    DROPOUT: 0.0
    HIDDEN_LAYERS: ()
    NAME: 
  INIT_WEIGHTS: 
OPTIM:
  ADAM_BETA1: 0.9
  ADAM_BETA2: 0.999
  BASE_LR_MULT: 0.1
  GAMMA: 0.1
  LR: 0.0035
  LR_SCHEDULER: cosine
  MAX_EPOCH: 5
  MOMENTUM: 0.9
  NAME: sgd
  NEW_LAYERS: ()
  RMSPROP_ALPHA: 0.99
  SGD_DAMPNING: 0
  SGD_NESTEROV: False
  STAGED_LR: False
  STEPSIZE: (-1,)
  WARMUP_CONS_LR: 1e-05
  WARMUP_EPOCH: 1
  WARMUP_MIN_LR: 1e-05
  WARMUP_RECOUNT: True
  WARMUP_TYPE: constant
  WEIGHT_DECAY: 0.0005
OUTPUT_DIR: output/base2new/train_base/Ucmerced/shots_16/MaPLe/vit_b16_c2_ep5_batch4_2ctx/seed45
RESUME: 
SEED: 45
TEST:
  COMPUTE_CMAT: False
  EVALUATOR: Classification
  FINAL_MODEL: last_step
  NO_TEST: False
  PER_CLASS_RESULT: False
  SPLIT: test
TRAIN:
  CHECKPOINT_FREQ: 0
  COUNT_ITER: train_x
  PRINT_FREQ: 20
TRAINER:
  CDAC:
    CLASS_LR_MULTI: 10
    P_THRESH: 0.95
    RAMPUP_COEF: 30
    RAMPUP_ITRS: 1000
    STRONG_TRANSFORMS: ()
    TOPK_MATCH: 5
  COCOOP:
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  COOP:
    CLASS_TOKEN_POSITION: end
    CSC: False
    CTX_INIT: 
    N_CTX: 16
    PREC: fp16
  CROSSGRAD:
    ALPHA_D: 0.5
    ALPHA_F: 0.5
    EPS_D: 1.0
    EPS_F: 1.0
  DAEL:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DAELDG:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 0.5
  DDAIG:
    ALPHA: 0.5
    CLAMP: False
    CLAMP_MAX: 1.0
    CLAMP_MIN: -1.0
    G_ARCH: 
    LMDA: 0.3
    WARMUP: 0
  DOMAINMIX:
    ALPHA: 1.0
    BETA: 1.0
    TYPE: crossdomain
  ENTMIN:
    LMDA: 0.001
  FIXMATCH:
    CONF_THRE: 0.95
    STRONG_TRANSFORMS: ()
    WEIGHT_U: 1.0
  IVLP:
    CTX_INIT: a photo of a
    N_CTX_TEXT: 2
    N_CTX_VISION: 2
    PREC: fp16
    PROMPT_DEPTH_TEXT: 9
    PROMPT_DEPTH_VISION: 9
  M3SDA:
    LMDA: 0.5
    N_STEP_F: 4
  MAPLE:
    CTX_INIT: a photo of a
    N_CTX: 2
    PREC: fp16
    PROMPT_DEPTH: 9
  MCD:
    N_STEP_F: 4
  MEANTEACHER:
    EMA_ALPHA: 0.999
    RAMPUP: 5
    WEIGHT_U: 1.0
  MIXMATCH:
    MIXUP_BETA: 0.75
    RAMPUP: 20000
    TEMP: 2.0
    WEIGHT_U: 100.0
  MME:
    LMDA: 0.1
  NAME: MaPLe
  SE:
    CONF_THRE: 0.95
    EMA_ALPHA: 0.999
    RAMPUP: 300
  VPT:
    CTX_INIT: a photo of a
    N_CTX_VISION: 2
    PREC: fp16
    PROMPT_DEPTH_VISION: 1
USE_CUDA: True
VERBOSE: True
VERSION: 1
Collecting env info ...
** System info **
PyTorch version: 2.3.0
Is debug build: False
CUDA used to build PyTorch: 12.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 22.04.2 LTS (x86_64)
GCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
Clang version: Could not collect
CMake version: version 3.22.1
Libc version: glibc-2.35

Python version: 3.8.19 (default, Mar 20 2024, 19:58:24)  [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-5.15.0-1029-nvidia-x86_64-with-glibc2.17
Is CUDA available: True
CUDA runtime version: 12.1.66
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: 
GPU 0: NVIDIA A100-SXM4-80GB
GPU 1: NVIDIA A100-SXM4-80GB
GPU 2: NVIDIA A100-SXM4-80GB
GPU 3: NVIDIA A100-SXM4-80GB
GPU 4: NVIDIA A100-SXM4-80GB
GPU 5: NVIDIA A100-SXM4-80GB
GPU 6: NVIDIA A100-SXM4-80GB
GPU 7: NVIDIA A100-SXM4-80GB

Nvidia driver version: 535.54.03
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

CPU:
Architecture:                    x86_64
CPU op-mode(s):                  32-bit, 64-bit
Address sizes:                   43 bits physical, 48 bits virtual
Byte Order:                      Little Endian
CPU(s):                          256
On-line CPU(s) list:             0-255
Vendor ID:                       AuthenticAMD
Model name:                      AMD EPYC 7742 64-Core Processor
CPU family:                      23
Model:                           49
Thread(s) per core:              2
Core(s) per socket:              64
Socket(s):                       2
Stepping:                        0
Frequency boost:                 enabled
CPU max MHz:                     2250.0000
CPU min MHz:                     1500.0000
BogoMIPS:                        4491.47
Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr rdpru wbnoinvd amd_ppin arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es
Virtualization:                  AMD-V
L1d cache:                       4 MiB (128 instances)
L1i cache:                       4 MiB (128 instances)
L2 cache:                        64 MiB (128 instances)
L3 cache:                        512 MiB (32 instances)
NUMA node(s):                    8
NUMA node0 CPU(s):               0-15,128-143
NUMA node1 CPU(s):               16-31,144-159
NUMA node2 CPU(s):               32-47,160-175
NUMA node3 CPU(s):               48-63,176-191
NUMA node4 CPU(s):               64-79,192-207
NUMA node5 CPU(s):               80-95,208-223
NUMA node6 CPU(s):               96-111,224-239
NUMA node7 CPU(s):               112-127,240-255
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Mmio stale data:   Not affected
Vulnerability Retbleed:          Mitigation; untrained return thunk; SMT enabled with STIBP protection
Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp
Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:        Mitigation; Retpolines, IBPB conditional, STIBP always-on, RSB filling, PBRSB-eIBRS Not affected
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected

Versions of relevant libraries:
[pip3] flake8==3.7.9
[pip3] numpy==1.24.3
[pip3] torch==2.3.0
[pip3] torchaudio==2.3.0
[pip3] torchvision==0.18.0
[pip3] triton==2.3.0
[conda] blas                      1.0                         mkl  
[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch
[conda] libjpeg-turbo             2.0.0                h9bf148f_0    pytorch
[conda] mkl                       2023.1.0         h213fc3f_46344  
[conda] mkl-service               2.4.0            py38h5eee18b_1  
[conda] mkl_fft                   1.3.8            py38h5eee18b_0  
[conda] mkl_random                1.2.4            py38hdb19cb5_0  
[conda] numpy                     1.24.3           py38hf6e8229_1  
[conda] numpy-base                1.24.3           py38h060ed82_1  
[conda] pytorch                   2.3.0           py3.8_cuda12.1_cudnn8.9.2_0    pytorch
[conda] pytorch-cuda              12.1                 ha16c6d3_5    pytorch
[conda] pytorch-mutex             1.0                        cuda    pytorch
[conda] torchaudio                2.3.0                py38_cu121    pytorch
[conda] torchtriton               2.3.0                      py38    pytorch
[conda] torchvision               0.18.0               py38_cu121    pytorch
        Pillow (10.3.0)

Loading trainer: MaPLe
['Digit5', 'VisDA17', 'CIFARSTL', 'Office31', 'DomainNet', 'OfficeHome', 'miniDomainNet', 'PACS', 'VLCS', 'FMoW', 'IWildCam', 'Camelyon17', 'CIFAR10C', 'CIFAR100C', 'DigitsDG', 'DigitSingle', 'OfficeHomeDG', 'CIFAR10', 'CIFAR100', 'SVHN', 'STL10', 'OxfordPets', 'OxfordFlowers', 'FGVCAircraft', 'DescribableTextures', 'EuroSAT', 'StanfordCars', 'Food101', 'SUN397', 'Caltech101', 'UCF101', 'ImageNet', 'ImageNetSketch', 'ImageNetV2', 'ImageNetA', 'ImageNetR', 'PatternNet', 'Ucmerced']
Loading dataset: Ucmerced
/raid/biplab/taha
/raid/biplab/taha/Ucmerced/Images
Reading split from /raid/biplab/taha/Ucmerced/Ucmerced.json
Loading preprocessed few-shot data from /raid/biplab/taha/Ucmerced/shots/shot_16-seed_45.pkl
SUBSAMPLE BASE CLASSES!
Building transform_train
+ random resized crop (size=(224, 224), scale=(0.08, 1.0))
+ random flip
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
Building transform_test
+ resize the smaller edge to 224
+ 224x224 center crop
+ to torch tensor of range [0, 1]
+ normalization (mean=[0.48145466, 0.4578275, 0.40821073], std=[0.26862954, 0.26130258, 0.27577711])
---------  --------
Dataset    Ucmerced
# classes  10
# train_x  160
# val      40
# test     200
---------  --------
Loading CLIP (backbone: ViT-B/16)
Building custom CLIP
MaPLe design: Multi-modal Prompt Learning
Initial context: "a photo of a"
Number of MaPLe context words (tokens): 2
printing CTX DIM 512
Turning off gradients in both the image and the text encoder
Parameters to be updated: {'prompt_learner.compound_prompt_projections.3.weight', 'prompt_learner.compound_prompt_projections.0.bias', 'prompt_learner.compound_prompt_projections.4.bias', 'prompt_learner.compound_prompts_text_parameters.0', 'prompt_learner.compound_prompt_projections.6.weight', 'prompt_learner.compound_prompt_projections.2.bias', 'prompt_learner.compound_prompt_projections.7.bias', 'prompt_learner.compound_prompts_text_parameters.2', 'prompt_learner.proj_vis_to_lang.weight', 'prompt_learner.compound_prompt_projections.2.weight', 'prompt_learner.compound_prompt_projections.4.weight', 'prompt_learner.visual_deep_prompts_parameters.0', 'prompt_learner.compound_prompt_projections.1.bias', 'prompt_learner.compound_prompt_projections.1.weight', 'prompt_learner.compound_prompt_projections.6.bias', 'prompt_learner.compound_prompt_projections.7.weight', 'prompt_learner.compound_prompts_text_parameters.3', 'prompt_learner.proj_lang_to_vis.weight', 'prompt_learner.visual_deep_prompts_parameters.1', 'prompt_learner.compound_prompt_projections.5.bias', 'prompt_learner.ctx', 'prompt_learner.compound_prompts_text_parameters.1', 'prompt_learner.proj_vis_to_lang.bias', 'prompt_learner.compound_prompt_projections.3.bias', 'prompt_learner.visual_deep_prompts_parameters.2', 'prompt_learner.proj_lang_to_vis.bias', 'prompt_learner.compound_prompt_projections.5.weight', 'prompt_learner.visual_deep_prompts_parameters.3', 'prompt_learner.compound_prompt_projections.0.weight'}
Loading evaluator: Classification
No checkpoint found, train from scratch
Initialize tensorboard (log_dir=output/base2new/train_base/Ucmerced/shots_16/MaPLe/vit_b16_c2_ep5_batch4_2ctx/seed45/tensorboard)
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [1/5] batch [20/40] time 0.047 (0.104) data 0.000 (0.012) loss 0.9312 (0.8126) lr 1.0000e-05 eta 0:00:18
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [1/5] batch [40/40] time 0.044 (0.076) data 0.000 (0.006) loss 0.1375 (0.6811) lr 3.5000e-03 eta 0:00:12
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [2/5] batch [20/40] time 0.044 (0.065) data 0.000 (0.014) loss 0.0286 (0.7290) lr 3.5000e-03 eta 0:00:09
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [2/5] batch [40/40] time 0.041 (0.058) data 0.000 (0.007) loss 0.8228 (0.4639) lr 3.1658e-03 eta 0:00:06
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [3/5] batch [20/40] time 0.050 (0.068) data 0.001 (0.015) loss 1.2861 (0.1420) lr 3.1658e-03 eta 0:00:06
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [3/5] batch [40/40] time 0.049 (0.058) data 0.000 (0.008) loss 0.3699 (0.2568) lr 2.2908e-03 eta 0:00:04
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [4/5] batch [20/40] time 0.057 (0.065) data 0.000 (0.013) loss 0.0327 (0.1388) lr 2.2908e-03 eta 0:00:03
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [4/5] batch [40/40] time 0.052 (0.057) data 0.000 (0.007) loss 0.6587 (0.1879) lr 1.2092e-03 eta 0:00:02
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [5/5] batch [20/40] time 0.047 (0.063) data 0.000 (0.013) loss 0.1263 (0.1054) lr 1.2092e-03 eta 0:00:01
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([4, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([4, 10]), dtype=torch.float16
loss: shape=torch.Size([]), dtype=torch.float16
epoch [5/5] batch [40/40] time 0.038 (0.057) data 0.000 (0.007) loss 0.0322 (0.1219) lr 3.3422e-04 eta 0:00:00
Checkpoint saved to output/base2new/train_base/Ucmerced/shots_16/MaPLe/vit_b16_c2_ep5_batch4_2ctx/seed45/MultiModalPromptLearner/model.pth.tar-5
Finish training
Deploy the last-epoch model
Evaluate on the *test* set
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([100, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([100, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([100, 10]), dtype=torch.float16
tokenized_prompts: shape=torch.Size([10, 77]), dtype=torch.int64
logit_scale: value=100.0
Initial ctx: shape=torch.Size([2, 512]), dtype=torch.float16
ctx after unsqueeze and expand: shape=torch.Size([10, 2, 512]), dtype=torch.float16
Prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
length of compound prompts 8
length of visual_deep_prompts 8
length of compound_prompts_text 8
visual_deep_prompts[0]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[2]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[4]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
visual_deep_prompts[6]: shape=torch.Size([2, 768]), dtype=torch.float32
compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
Projected ctx: shape=torch.Size([2, 768]), dtype=torch.float16
prompts: shape=torch.Size([10, 77, 512]), dtype=torch.float16
shared_ctx: shape=torch.Size([2, 768]), dtype=torch.float16
deep_compound_prompts_text[0]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[1]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[2]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[3]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[4]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[5]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[6]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_text[7]: shape=torch.Size([2, 512]), dtype=torch.float32
deep_compound_prompts_vision[0]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[1]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[2]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[3]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[4]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[5]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[6]: shape=torch.Size([2, 768]), dtype=torch.float32
deep_compound_prompts_vision[7]: shape=torch.Size([2, 768]), dtype=torch.float32
Step 1 (after positional embedding): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 2 (after permute NLD -> LND): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 3 (after transformer): size=torch.Size([77, 10, 512]), dtype=torch.float16
Step 4 (after permute LND -> NLD): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 5 (after layer normalization): size=torch.Size([10, 77, 512]), dtype=torch.float16
Step 6 (after text projection): size=torch.Size([10, 512]), dtype=torch.float16
text_features: shape=torch.Size([10, 512]), dtype=torch.float16
image_features: shape=torch.Size([100, 512]), dtype=torch.float16
normalized_image_features: shape=torch.Size([100, 512]), dtype=torch.float16
normalized_text_features: shape=torch.Size([10, 512]), dtype=torch.float16
logits: shape=torch.Size([100, 10]), dtype=torch.float16
=> result
* total: 200
* correct: 196
* accuracy: 98.0%
* error: 2.0%
* macro_f1: 98.0%
Elapsed: 0:00:14
